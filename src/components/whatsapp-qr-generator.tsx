"use client"

import { useState, useEffect } from "react"
import QRCode from "qrcode"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { QrCode, Download, RefreshCw } from "lucide-react"
import { useToast } from "@/hooks/use-toast"

interface WhatsAppQRGeneratorProps {
  phoneNumber: string
  restaurantId: string
  onQRGenerated?: (qrData: string) => void
}

export function WhatsAppQRGenerator({ phoneNumber, restaurantId, onQRGenerated }: WhatsAppQRGeneratorProps) {
  const [qrCodeDataURL, setQrCodeDataURL] = useState<string>("")
  const [isGenerating, setIsGenerating] = useState(false)
  const [qrData, setQrData] = useState<string>("")
  const { toast } = useToast()

  // Generate a WhatsApp Web session URL
  const generateWhatsAppWebURL = () => {
    // For development, we'll create a mock URL that would normally come from WhatsApp Web API
    // In production, this would be generated by the WhatsApp Business API
    const baseURL = "https://web.whatsapp.com/send"
    const params = new URLSearchParams({
      phone: phoneNumber.replace(/\D/g, ""), // Remove non-digits
      text: `Hello! I'm connecting to ${restaurantId} restaurant chatbot.`
    })
    return `${baseURL}?${params.toString()}`
  }

  const generateQRCode = async () => {
    if (!phoneNumber) {
      toast({
        title: "Phone number required",
        description: "Please enter a WhatsApp number first.",
        variant: "destructive"
      })
      return
    }

    setIsGenerating(true)
    try {
      // Generate WhatsApp Web URL
      const whatsappURL = generateWhatsAppWebURL()
      setQrData(whatsappURL)

      // Generate QR code
      const qrDataURL = await QRCode.toDataURL(whatsappURL, {
        width: 256,
        margin: 2,
        color: {
          dark: "#000000",
          light: "#FFFFFF"
        }
      })

      setQrCodeDataURL(qrDataURL)
      onQRGenerated?.(whatsappURL)

      toast({
        title: "QR Code Generated",
        description: "Scan this QR code with WhatsApp to connect your number."
      })
    } catch (error) {
      console.error("Error generating QR code:", error)
      toast({
        title: "Error",
        description: "Failed to generate QR code. Please try again.",
        variant: "destructive"
      })
    } finally {
      setIsGenerating(false)
    }
  }

  const downloadQRCode = () => {
    if (!qrCodeDataURL) return

    const link = document.createElement("a")
    link.download = `whatsapp-qr-${restaurantId}-${Date.now()}.png`
    link.href = qrCodeDataURL
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)

    toast({
      title: "QR Code Downloaded",
      description: "The QR code has been saved to your device."
    })
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <QrCode className="h-5 w-5" />
          WhatsApp QR Code
        </CardTitle>
        <CardDescription>
          Generate a QR code to connect your WhatsApp number to this restaurant
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {qrCodeDataURL ? (
          <div className="space-y-4">
            <div className="flex justify-center">
              <img
                src={qrCodeDataURL}
                alt="WhatsApp QR Code"
                className="border rounded-lg shadow-sm"
                style={{ maxWidth: "256px", height: "auto" }}
              />
            </div>
            <div className="flex gap-2 justify-center">
              <Button
                variant="outline"
                onClick={downloadQRCode}
                className="flex items-center gap-2"
              >
                <Download className="h-4 w-4" />
                Download QR
              </Button>
              <Button
                variant="outline"
                onClick={generateQRCode}
                disabled={isGenerating}
                className="flex items-center gap-2"
              >
                <RefreshCw className={`h-4 w-4 ${isGenerating ? "animate-spin" : ""}`} />
                Regenerate
              </Button>
            </div>
            <div className="text-xs text-muted-foreground text-center">
              <p>Scan this QR code with WhatsApp Web to connect your number</p>
              <p className="mt-1 font-mono text-xs break-all">{qrData}</p>
            </div>
          </div>
        ) : (
          <div className="space-y-4">
            <div className="w-64 h-64 border-2 border-dashed border-muted-foreground/25 rounded-lg flex items-center justify-center mx-auto">
              <div className="text-center">
                <QrCode className="h-16 w-16 mx-auto text-muted-foreground/50 mb-2" />
                <p className="text-sm text-muted-foreground">No QR code generated</p>
              </div>
            </div>
            <div className="flex justify-center">
              <Button
                onClick={generateQRCode}
                disabled={isGenerating || !phoneNumber}
                className="flex items-center gap-2"
              >
                {isGenerating ? (
                  <RefreshCw className="h-4 w-4 animate-spin" />
                ) : (
                  <QrCode className="h-4 w-4" />
                )}
                {isGenerating ? "Generating..." : "Generate QR Code"}
              </Button>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}